const fs = require('fs')
const html = require('html')
const util = require('util')

const config = require('../config.json')

const readdirPromise = util.promisify(fs.readdir)
const readFilePromise = util.promisify(fs.readFile)
const copyFilePromise = util.promisify(fs.copyFile)
const writeFilePromise = util.promisify(fs.writeFile)

class Blog {
	constuctor({
		title='',
		subtitle='',
		blurb='',
		cover='',
		coverCredit='',
		published='',
		updated='',
		author='',
		latest=false,
		featured=false,
		tags=[],
		content=[]
	}) {

	}
}

class Project {
	constuctor({
		name='',
		blurb='',
		description='',
		technologies=[],
		source='',
		install='',
		documentation='',
		cover='',
		links={},
		content=[]
	}) {

	}
}

const buildGenerationHeader = async (template) => {
	let data = await readFilePromise(template)
	data = data.toString()
	const now = Date().toLocaleString()
	headerData = []
	headerData.push('<!-- This is an autogenerated file - DO NOT EDIT DIRECTLY -->')
	headerData.push(`<!-- This file was generated on ${now} based on template '${template}' via the forge in willcarh.art -->`)
	headerData.push('<!-- Learn more: https://github.com/wcarhart/willcarh.art -->')
	data = data.replace(`{{generationHeader}}`, headerData.join('\n'))
	return data
}

const generate = async (page) => {
	switch (page) {
		case 'home':
			await buildHome()
			break
		case 'about':
			await buildAbout()
			break
		case 'blog':
			await buildBlogIndex()
			await buildBlogPosts()
			break
		case 'projects':
			await buildProjectIndex()
			await buildProjectPages()
			break
		case 'apps':
			break
		default:
			throw new Exception(`Unknown page '${page}'`)
	}
}

const buildHome = async () => {
	console.log('Building home page...')
	let data = await buildGenerationHeader('templates/home.html')
	await writeFilePromise('index.html', data)
}

const buildAbout = async () => {

}

const buildBlogIndex = async () => {
	console.log('Building blog...')
	return
}

const buildBlogPosts = async () => {
	let posts = await findFiles('blog')
	for (let post of posts) {
		console.log(`  Found post ${post}...`)
	}
}

const buildProjectIndex = async () => {
	console.log('Building projects...')
	return
}

const buildProjectPages = async () => {
	let projects = await findFiles('projects')
	for (let project of projects) {
		console.log(`  Found project ${project}...`)
	}
}

const findFiles = async (kind) => {
	let files = await readdirPromise(`content/${kind}`)
	files = files.flatMap(file => file !== 'index.md' ? file : [])
	return files
}

module.exports = {
	generate: generate
}